<?php

namespace AppBundle\Repository;

use AppBundle\Domain\Tarea;
use AppBundle\Domain\TodoInterface;
use AppBundle\Entity\Todo;
use AppBundle\Translator\TareaTranslator;
use Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepository;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping;
use Doctrine\ORM\Mapping\ClassMetadata;
use Doctrine\Persistence\ManagerRegistry;

/**
 * TodoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TodoRepository  implements TodoInterface
{

    /** @var EntityManagerInterface  */
    private $entityManager;


    /** @var EntityFactory  */
    private $factory;

    /** @var TareaTranslator  */
    private $translator;

    /**
     * TodoRepository constructor.
     * @param ManagerRegistry $registry
     * @param $entityClass
     */
    public function __construct(EntityManagerInterface $em, EntityFactory $factory, TareaTranslator $translator)
    {

        $this->entityManager = $em;

        $this->factory = $factory;
        $this->translator = $translator;
    }

    /**
     * @inheritDoc
     */
    public function showListado(): array
    {
        $q = $this->entityManager->createQuery(
            'SELECT p
            FROM AppBundle\Entity\Todo p
            ORDER BY p.fechaCreacion ASC'
        );

        return  $this->translator->toDomain( $q->getResult());
    }


    /**
     * @inheritDoc
     */
    public function addElement(Tarea $tarea): Tarea
    {
        try {

            /** @var Todo|null $tareaEdit */
         $tareaEdit= $this->entityManager->find(Todo::class, $tarea->getid());


        }catch (\Exception $exception)
        {
            throw new \Exception($exception->getMessage(), $exception->getCode());
        }
        $tareaEntity = $this->factory->createTareaEntityFromDomain($tarea, $tareaEdit);

        if($tareaEdit === null) {

            $this->entityManager->persist($tareaEntity);

        }
        $this->entityManager->flush();

        return $tarea;
    }
}
