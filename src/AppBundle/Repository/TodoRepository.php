<?php

namespace AppBundle\Repository;

use AppBundle\Domain\Tarea;
use AppBundle\Domain\TodoInterface;
use AppBundle\Entity\Todo;
use AppBundle\Translator\TareaTranslator;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Mapping;
use Doctrine\ORM\Mapping\ClassMetadata;

/**
 * TodoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TodoRepository extends EntityRepository implements TodoInterface
{

    /** @var EntityManagerInterface  */
    private $entityManager;


    /** @var EntityFactory  */
    private $factory;

    /** @var TareaTranslator  */
    private $translator;

    /**
     * TodoRepository constructor.
     * @param EntityManagerInterface $em
     * @param ClassMetadata $class
     * @param EntityFactory $factory
     * @param TareaTranslator $translator
     */
    public function __construct(EntityManagerInterface $em, ClassMetadata $class, EntityFactory $factory, TareaTranslator $translator)
    {
        parent::__construct($em, $class);

        $this->entityManager = $em;

        $this->factory = $factory;
        $this->translator = $translator;
    }


    /**
     * @inheritDoc
     */
    public function addElement(Tarea $tarea): Tarea
    {
        try {
            /** @var Todo|null $tareaEdit */
            $tareaEdit= $this->entityManager->find(Todo::class, $tarea->id());
        }catch (\Exception $exception)
        {
            throw new \Exception($exception->getMessage(), $exception->getCode());
        }

        if($tareaEdit === null)
        {
            $tareaEntity = $this->factory->createTareaEntityFromDomain($tarea, $tareaEdit);
            $this->entityManager->persist($tareaEntity);
            $this->entityManager->flush();
        }

        return $tarea;
    }

    /**
     * @inheritDoc
     */
    public function showListado(int $id): Tarea
    {
      if(empty($id))
      {
          throw new \Exception('no id');
      }
      /** @var Todo $tareaEdit */
        $tareaEdit = $this->entityManager->find(Todo::class, $id);

        if($tareaEdit === null)
        {
            throw new \Exception('no found');
        }

        $this->translator->toDomain($tareaEdit);

    }


}
